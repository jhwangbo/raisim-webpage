#############################
Material System
#############################

**In RaiSim, all material properties are associated with a pair.**
Most physics engines define material properties on each material and average the two material properties to get the contact properties.
The RaiSim way is more accurate and users have more freedom to it but it might be combersome to define a set of material properties for all pairs.

There are currently three material properties used in RaiSim.

* Coefficient of friction (:math:`\mu\ge 0`): This defines how much friction is applied
* Coefficient of restitution (:math:`c_r\ge 0`): How bouncy the material pair is
* Restitution Threshold (:math:`c_{th}\ge 0`): If the impact velocity is smaller than this number, objects do not bounce off

The bounce velocity is computed as :math:`=c_{th}(v_i-c_{th})`, where :math:`v_i` is the impact velocity.

A material name is set when the object is created.
For example,

.. code-block:: C

  auto ball = world.addSphere(1, 1, "steel");

In order to simulate "steel", its material pair has to be added.
Note that material is defined on a collision body.
If an object has multiple collision bodies, each collision body can have a different material.
The above creation method assumes that all collision bodies have the same material.

Unrecognized material pairs will get **default material properties**, which can be set as :code:`raisim::World::setDefaultMaterial`.
If the default material pair properties are not set, they are {:math:`\mu=0.8`, :math:`c_r=0`, :math:`c_{th}=0`}.

Material properties over a pair can be defined as following

.. code-block:: C

  world.setMaterialPairProp("steel", "glass", 0.7, 0.1, 0.15);

The first two arguments are the two materials and the following three are the coefficient of friction, coeffcient of restitution, and restitution threshold.
The order of the material names does not matter.

